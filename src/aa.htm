
<!DOCTYPE html>
<html class="no-js">

<head>
  <meta charset="utf-8">
  <title>
    /Users/drace/tmp/pyspark_2.py
  </title>
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="mobile-web-app-capable" content="yes">
  <link rel="stylesheet" href="./assets/reset.css" type="text/css">
  <link rel="stylesheet" href="./assets/diff.css" type="text/css">
  <link class="syntaxdef" rel="stylesheet" href="./assets/codeformats/vs.css" type="text/css">
</head>

<body>
  <div class="" id="topbar">
    <div id="filetitle">
      /Users/drace/tmp/pyspark_2.py
    </div>
  </div>
  <div id="maincontainer" class="page-80-width">
    <div id="leftcode" class="left-inner-shadow codebox divider-outside-bottom">
      <div class="codefiletab">
        &#10092; Original
      </div>
      <div class="printmargin">
        01234567890123456789012345678901234567890123456789012345678901234567890123456789
      </div>
      <table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="lineno_q">1</span><span class="lineno_q">2</span><span class="lineno_q">3</span><span class="lineno_q">4</span><span class="lineno_q">5</span><span class="lineno_q">6</span><span class="lineno_q">7</span><span class="lineno_q lineno_leftchange">8</span><span class="lineno_q">9</span><span class="lineno_q">10</span><span class="lineno_q">11</span><span class="lineno_q">12</span><span class="lineno_q">13</span><span class="lineno_q">14</span><span class="lineno_q lineno_leftchange">15</span><span class="lineno_q">16</span><span class="lineno_q">17</span><span class="lineno_q">18</span><span class="lineno_q">19</span><span class="lineno_q">20</span><span class="lineno_q">21</span><span class="lineno_q">22</span><span class="lineno_q">23</span><span class="lineno_q">24</span><span class="lineno_q lineno_leftchange">25</span><span class="lineno_q lineno_leftdel">26</span><span class="lineno_q lineno_leftdel">27</span><span class="lineno_q">28</span><span class="lineno_q">29</span><span class="lineno_q">30</span><span class="lineno_q">31</span><span class="lineno_q">32</span><span class="lineno_q">33</span><span class="lineno_q">34</span><span class="lineno_q">35</span><span class="lineno_q">36</span><span class="lineno_q">37</span><span class="lineno_q">38</span><span class="lineno_q">39</span><span class="lineno_q">40</span><span class="lineno_q">41</span><span class="lineno_q">42</span></pre></div></td><td class="code"><pre><span class="kn">from</span> <span class="nn">pyspark.sql</span> <span class="kn">import</span> <span class="n">SparkSession</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>

    <span class="c1"># create a spark session</span>
    <span class="n">spark</span> <span class="o">=</span> <span class="n">SparkSession</span> \
        <span class="o">.</span><span class="n">builder</span> \
<span class="left_diff_change">        <span class="o">.</span><span class="n">appName</span><span class="p">(</span><span class="s2">&quot;VER1&quot;</span><span class="p">)</span> \
</span>        <span class="o">.</span><span class="n">getOrCreate</span><span class="p">()</span>

    <span class="c1"># load an example csv file from dataflow public storage into DataFrame</span>
    <span class="n">df1</span> <span class="o">=</span> <span class="n">spark</span>\
          <span class="o">.</span><span class="n">read</span>\
          <span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="s2">&quot;csv&quot;</span><span class="p">)</span>\
<span class="left_diff_change">          <span class="o">.</span><span class="n">option</span><span class="p">(</span><span class="s2">&quot;header&quot;</span><span class="p">,</span> <span class="s2">&quot;true&quot;</span><span class="p">)</span>\
</span>          <span class="o">.</span><span class="n">option</span><span class="p">(</span><span class="s2">&quot;multiLine&quot;</span><span class="p">,</span> <span class="s2">&quot;true&quot;</span><span class="p">)</span>\
          <span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s2">&quot;oci://oow_2019_dataflow_lab@bigdatadatasciencelarge/usercontent/kaggle_berlin_airbnb_listings_summary.csv&quot;</span><span class="p">)</span>

    <span class="c1"># the dataframe as a sql view so we can perform SQL on it</span>
    <span class="n">df1</span><span class="o">.</span><span class="n">createOrReplaceTempView</span><span class="p">(</span><span class="s2">&quot;berlin&quot;</span><span class="p">)</span>

    <span class="n">df2</span> <span class="o">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">sql</span><span class="p">(</span><span class="s2">&quot;&quot;&quot;</span>
<span class="s2">                      SELECT</span>
<span class="s2">                        city,</span>
<span class="left_diff_change"><span class="s2">                        zipcode,</span>
</span><span class="left_diff_del"><span class="s2">                        number_of_reviews,</span>
</span><span class="left_diff_del"><span class="s2">                        CONCAT(latitude, &#39;,&#39;, longitude) AS lat_long</span>
</span><span class="s2">                      FROM</span>
<span class="s2">                        berlin&quot;&quot;&quot;</span>
                    <span class="p">)</span>

    <span class="c1"># Convert the filtered Spark DataFrame into json format</span>
    <span class="c1"># Note: we are writing to the spark stdout log so that we can retrieve the log later at the end of the notebook.</span>

    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span>\
            <span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">query_result_df</span>\
            <span class="o">.</span><span class="n">toJSON</span><span class="p">()</span>\
            <span class="o">.</span><span class="n">collect</span><span class="p">()))</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>

</pre></td></tr></table>
    </div>
    <div id="rightcode" class="left-inner-shadow codebox divider-outside-bottom">
      <div class="codefiletab">
        &#10093; Modified
      </div>
      <div class="printmargin">
        01234567890123456789012345678901234567890123456789012345678901234567890123456789
      </div>
      <table class="highlighttable"><tr><td class="linenos"><div class="linenodiv"><pre><span class="lineno_q">1</span><span class="lineno_q">2</span><span class="lineno_q">3</span><span class="lineno_q">4</span><span class="lineno_q">5</span><span class="lineno_q">6</span><span class="lineno_q">7</span><span class="lineno_q lineno_rightchange">8</span><span class="lineno_q">9</span><span class="lineno_q">10</span><span class="lineno_q">11</span><span class="lineno_q">12</span><span class="lineno_q">13</span><span class="lineno_q">14</span><span class="lineno_q lineno_rightchange">15</span><span class="lineno_q">16</span><span class="lineno_q">17</span><span class="lineno_q">18</span><span class="lineno_q">19</span><span class="lineno_q">20</span><span class="lineno_q">21</span><span class="lineno_q">22</span><span class="lineno_q">23</span><span class="lineno_q">24</span><span class="lineno_q lineno_rightchange">25</span><span class="lineno_q lineno_rightdel">  </span><span class="lineno_q lineno_rightdel">  </span><span class="lineno_q">26</span><span class="lineno_q">27</span><span class="lineno_q">28</span><span class="lineno_q">29</span><span class="lineno_q">30</span><span class="lineno_q">31</span><span class="lineno_q">32</span><span class="lineno_q">33</span><span class="lineno_q">34</span><span class="lineno_q">35</span><span class="lineno_q">36</span><span class="lineno_q">37</span><span class="lineno_q">38</span><span class="lineno_q">39</span><span class="lineno_q">40</span></pre></div></td><td class="code"><pre><span class="kn">from</span> <span class="nn">pyspark.sql</span> <span class="kn">import</span> <span class="n">SparkSession</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>

    <span class="c1"># create a spark session</span>
    <span class="n">spark</span> <span class="o">=</span> <span class="n">SparkSession</span> \
        <span class="o">.</span><span class="n">builder</span> \
<span class="right_diff_change">        <span class="o">.</span><span class="n">appName</span><span class="p">(</span><span class="s2">&quot;VER2&quot;</span><span class="p">)</span> \
</span>        <span class="o">.</span><span class="n">getOrCreate</span><span class="p">()</span>

    <span class="c1"># load an example csv file from dataflow public storage into DataFrame</span>
    <span class="n">df1</span> <span class="o">=</span> <span class="n">spark</span>\
          <span class="o">.</span><span class="n">read</span>\
          <span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="s2">&quot;csv&quot;</span><span class="p">)</span>\
<span class="right_diff_change">          <span class="o">.</span><span class="n">option</span><span class="p">(</span><span class="s2">&quot;header&quot;</span><span class="p">,</span> <span class="s2">&quot;false&quot;</span><span class="p">)</span>\
</span>          <span class="o">.</span><span class="n">option</span><span class="p">(</span><span class="s2">&quot;multiLine&quot;</span><span class="p">,</span> <span class="s2">&quot;true&quot;</span><span class="p">)</span>\
          <span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s2">&quot;oci://oow_2019_dataflow_lab@bigdatadatasciencelarge/usercontent/kaggle_berlin_airbnb_listings_summary.csv&quot;</span><span class="p">)</span>

    <span class="c1"># the dataframe as a sql view so we can perform SQL on it</span>
    <span class="n">df1</span><span class="o">.</span><span class="n">createOrReplaceTempView</span><span class="p">(</span><span class="s2">&quot;berlin&quot;</span><span class="p">)</span>

    <span class="n">df2</span> <span class="o">=</span> <span class="n">spark</span><span class="o">.</span><span class="n">sql</span><span class="p">(</span><span class="s2">&quot;&quot;&quot;</span>
<span class="s2">                      SELECT</span>
<span class="s2">                        city,</span>
<span class="right_diff_change"><span class="s2">                        zipcode</span>
</span><span class="right_diff_del">
</span><span class="right_diff_del">
</span><span class="s2">                      FROM</span>
<span class="s2">                        berlin&quot;&quot;&quot;</span>
                    <span class="p">)</span>

    <span class="c1"># Convert the filtered Spark DataFrame into json format</span>
    <span class="c1"># Note: we are writing to the spark stdout log so that we can retrieve the log later at the end of the notebook.</span>

    <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span>\
            <span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">query_result_df</span>\
            <span class="o">.</span><span class="n">toJSON</span><span class="p">()</span>\
            <span class="o">.</span><span class="n">collect</span><span class="p">()))</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>

</pre></td></tr></table>
    </div>
  </div>
  <script src="./assets/diff.js" type="text/javascript"></script>
</body>

</html>

